apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.andyho.sampleapplication"
        minSdkVersion 16
        targetSdkVersion 29
        multiDexEnabled = true
        vectorDrawables.useSupportLibrary = true
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${ToolVersions.kotlinGradlePlugin}"
    implementation("androidx.core:core-ktx:${Versions.androidXCoreVersion}")
    implementation("androidx.appcompat:appcompat:${Versions.appcompatVersion}")
    implementation("com.google.android.material:material:$Versions.materialVersion")
    implementation("androidx.constraintlayout:constraintlayout:${Versions.constraintVersion}")
    testImplementation("junit:junit:$TestVersions.junitVersion")
    androidTestImplementation("androidx.test.ext:junit:$TestVersions.junitExtVersion")
    androidTestImplementation("androidx.test.espresso:espresso-core:$TestVersions.espressoCore")

    //retrofit
    implementation("com.google.code.gson:gson:${Versions.gson}")
    implementation("com.squareup.retrofit2:retrofit:${Versions.retrofit}")
    implementation("com.squareup.retrofit2:converter-gson:${Versions.retrofit}")
    implementation("com.squareup.okhttp3:okhttp:${Versions.okhttpVersion}")
    implementation("com.squareup.okhttp3:logging-interceptor:${Versions.okhttpVersion}")

    //eventbus
    implementation("org.greenrobot:eventbus:${Versions.eventBusVersion}")

    //glide
    implementation("com.github.bumptech.glide:glide:${Versions.glideVersion}")

    //rxjava
    implementation("io.reactivex.rxjava2:rxjava:${Versions.rxjavaVersion}")
    implementation("io.reactivex.rxjava2:rxandroid:${Versions.rxAndroidVersion}")
    implementation("com.squareup.retrofit2:adapter-rxjava2:${Versions.retrofit}")

    implementation(Deps.glideLib)
    implementation(Deps.playService)
    implementation(Deps.daggerLib)
    kapt(Deps.annotationProcessorLibs)

    //room
    implementation("androidx.room:room-runtime:${Versions.roomVersion}")
    implementation("androidx.room:room-rxjava2:${Versions.roomVersion}")
    implementation("androidx.room:room-ktx:${Versions.roomVersion}")
    kapt("androidx.room:room-compiler:${Versions.roomVersion}")

    //paging
    implementation("androidx.paging:paging-runtime:${Versions.pagingVersion}")
    implementation("androidx.recyclerview:recyclerview:${Versions.recyclerviewVersion}")

    // work
    implementation("androidx.work:work-runtime-ktx:${Versions.workManagerVersion}")

    implementation("androidx.fragment:fragment-ktx:${Versions.fragmentKtxVersion}")
    implementation("com.google.android:flexbox:2.0.1")
}